var FlowNode = (function () {
    function FlowNode(id, type) {
        this.id = id;
        this.type = type;
        this.incomingEdges = [];
        this.outgoingEdges = [];
    }
    FlowNode.prototype.appendTo = function (node, label, edgeData, edgeType) {
        if (edgeType === void 0) { edgeType = EdgeType.Normal; }
        var edge = {
            source: node,
            target: this,
            type: edgeType,
            label: label,
            data: edgeData
        };
        node.outgoingEdges.push(edge);
        this.incomingEdges.push(edge);
        return this;
    };
    FlowNode.prototype.appendConditionallyTo = function (node, label, condition) {
        return this.appendTo(node, label, condition, EdgeType.Conditional);
    };
    FlowNode.prototype.appendEpsilonEdgeTo = function (node) {
        return this.appendTo(node, "", null, EdgeType.Epsilon);
    };
    return FlowNode;
})();
exports.FlowNode = FlowNode;
(function (NodeType) {
    NodeType[NodeType["Normal"] = 0] = "Normal";
    NodeType[NodeType["Entry"] = 1] = "Entry";
    NodeType[NodeType["SuccessExit"] = 2] = "SuccessExit";
    NodeType[NodeType["ErrorExit"] = 3] = "ErrorExit";
})(exports.NodeType || (exports.NodeType = {}));
var NodeType = exports.NodeType;
(function (EdgeType) {
    EdgeType[EdgeType["Normal"] = 0] = "Normal";
    EdgeType[EdgeType["Epsilon"] = 1] = "Epsilon";
    EdgeType[EdgeType["Conditional"] = 2] = "Conditional";
    EdgeType[EdgeType["AbruptCompletion"] = 3] = "AbruptCompletion";
})(exports.EdgeType || (exports.EdgeType = {}));
var EdgeType = exports.EdgeType;
;
(function (EnclosingStatementType) {
    EnclosingStatementType[EnclosingStatementType["TryStatement"] = 0] = "TryStatement";
    EnclosingStatementType[EnclosingStatementType["OtherStatement"] = 1] = "OtherStatement";
})(exports.EnclosingStatementType || (exports.EnclosingStatementType = {}));
var EnclosingStatementType = exports.EnclosingStatementType;
